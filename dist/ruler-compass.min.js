/*! ruler-compass - v0.0.0 - 2013-01-01
 * https://github.com/dvberkel/ruler-compass
 * Copyright (c) 2013 Daan van Berkel; Licensed MIT
 */
Geometry={version:"0.0.0"},function(e,t,n){var r=t.Model.extend({defaults:{x:0,y:0}}),i=t.Model.extend({name:function(e){e&&this.set("name",e);if(!this.has("name")){var t=this;this.trigger("request:name",function(e){t.name(e)})}return e||this.get("name")},point:function(){return this.has("point")||this.set("point",new r),this.get("point")}}),s=t.Collection.extend({model:i,append:function(e){e.on("request:name",this.provideName,this),this.add(e)},provideName:function(e){e.call(null,"P"+(this.size()-1))}});n.ConstructionStep=i,n.Construction=s}(_,Backbone,Geometry),function(e,t,n,r){var i=n.View.extend({initialize:function(){this.model||(this.model=new r.Construction),this.render()},render:function(){new s({el:this.$el,model:this.model}),new a({el:this.$el,model:this.model}),e("<div class='result'/>").appendTo(this.$el)}}),s=n.View.extend({initialize:function(){this.render()},render:function(){var t=e("<div class='parts'/>");t.appendTo(this.$el),new o({el:t,model:this.model})}}),o=n.View.extend({initialize:function(){this.render()},render:function(){var t=e("<div class='free'/>");t.appendTo(this.$el),new u({el:t,model:this.model})}}),u=n.View.extend({initialize:function(){this.render()},render:function(){var t=e("<span class='point'>Point</span>");t.appendTo(this.$el);var n=this.model;t.click(function(){n.append(new r.ConstructionStep({}))})}}),a=n.View.extend({initialize:function(){this.model.on("add",function(e){var t=this.container();new f({el:t,model:e})},this),this.render()},render:function(){var e=this.container()},container:function(){return this._container===undefined&&(this._container=e("<div class='code'/>"),this._container.appendTo(this.$el)),this._container}}),f=n.View.extend({initialize:function(){this.render()},render:function(){var e=this.container();new l({el:e,model:this.model}),new h({el:e,model:this.model})},container:function(){return this._container===undefined&&(this._container=e("<div class='point'/>"),this._container.appendTo(this.$el)),this._container}}),l=n.View.extend({initialize:function(){this.render()},render:function(){var e=this.container();new c({el:e,model:this.model})},container:function(){return this._container===undefined&&(this._container=e("<span class='names'/>"),this._container.appendTo(this.$el)),this._container}}),c=n.View.extend({initialize:function(){this.render()},render:function(){var e=this.container();e.empty().text(this.model.name())},container:function(){return this._container===undefined&&(this._container=e("<span class='name'/>"),this._container.appendTo(this.$el)),this._container}}),h=n.View.extend({initialize:function(){this.render()},render:function(){var e=this.container();new p({model:this.model.point(),el:e})},container:function(){return this._container===undefined&&(this._container=e("<span class='description'/>"),this._container.appendTo(this.$el)),this._container}}),p=n.View.extend({template:t.template("<span class='free-point'>(<span class='coordinate'><%= x %></span>,<span class='coordinate'><%= y %></span>)</span>"),initialize:function(){this.render()},render:function(){var e=this.container()},container:function(){return this._container===undefined&&(this._container=e(this.template(this.model.toJSON())),this._container.appendTo(this.$el)),this._container}});r.EnvironmentView=i}(jQuery,_,Backbone,Geometry);